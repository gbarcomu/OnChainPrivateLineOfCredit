/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Bank } from "../Bank";

export class Bank__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    USDFooAddress: string,
    turboVerifierAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Bank> {
    return super.deploy(
      USDFooAddress,
      turboVerifierAddress,
      overrides || {}
    ) as Promise<Bank>;
  }
  getDeployTransaction(
    USDFooAddress: string,
    turboVerifierAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      USDFooAddress,
      turboVerifierAddress,
      overrides || {}
    );
  }
  attach(address: string): Bank {
    return super.attach(address) as Bank;
  }
  connect(signer: Signer): Bank__factory {
    return super.connect(signer) as Bank__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bank {
    return new Contract(address, _abi, signerOrProvider) as Bank;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "USDFooAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "turboVerifierAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "lineSuccessfullyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokensSuccessfullyCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
    ],
    name: "getLineOfCredit",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "getMaximumAmount",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_maximumAllowanceHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_disposedAmountHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_interestRateHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_accruedInterestsHash",
        type: "bytes32",
      },
    ],
    name: "openLineOfCredit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
    ],
    name: "withdrawWithProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107e13803806107e183398101604081905261002f916100e5565b600180546001600160a01b0319166001600160a01b03841690811790915560405163140e25ad60e31b8152655af3107a4000600482015263a0712d6890602401600060405180830381600087803b15801561008957600080fd5b505af115801561009d573d6000803e3d6000fd5b5050600280546001600160a01b0319166001600160a01b03949094169390931790925550610118915050565b80516001600160a01b03811681146100e057600080fd5b919050565b600080604083850312156100f857600080fd5b610101836100c9565b915061010f602084016100c9565b90509250929050565b6106ba806101276000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063ad5cf40d11610050578063ad5cf40d146100bc578063c1bcf714146100d1578063fcfe38ac146100e457600080fd5b806355c265fe1461006c5780638fe325f814610094575b600080fd5b61007f61007a36600461052c565b61015a565b60405190151581526020015b60405180910390f35b6100ae6100a236600461052c565b50506024600435013590565b60405190815260200161008b565b6100cf6100ca36600461056e565b610200565b005b6100cf6100df3660046105a9565b610285565b61013a6100f23660046105f5565b60009081526020818152604091829020825160808101845281548082526001830154938201849052600283015494820185905260039092015460609091018190529093919291565b60408051948552602085019390935291830152606082015260800161008b565b6002546040517f8e760afe000000000000000000000000000000000000000000000000000000008152600091829173ffffffffffffffffffffffffffffffffffffffff90911690638e760afe906101b7908790879060040161060e565b602060405180830381865afa1580156101d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f8919061065b565b949350505050565b6040805160808101825285815260208082018681528284018681526060840186815260008b815280855286902094518555915160018086019190915590516002850155905160039093019290925591519081527f5e4d03a69cf1c50a722b7d5e89bedbfe6be5b7f382128a0034c622fb2aff3b54910160405180910390a15050505050565b60008181526020819052604090205460043560240135908114610309576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4d6178696d756d20616d6f756e74206e6f7420636f727265637400000000000060448201526064015b60405180910390fd5b6002546040517f8e760afe00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690638e760afe90610361908790879060040161060e565b602060405180830381865afa15801561037e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a2919061065b565b151560011461040d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4e6f742076616c69642070726f6f6600000000000000000000000000000000006044820152606401610300565b6001546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526064602482015273ffffffffffffffffffffffffffffffffffffffff9091169063a9059cbb906044016020604051808303816000875af1158015610484573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a8919061065b565b50604051606481527f9426c9994b0b96a4028e9df64b0a71825dac5f24c7e7de3612516893a23f14379060200160405180910390a150505050565b60008083601f8401126104f557600080fd5b50813567ffffffffffffffff81111561050d57600080fd5b60208301915083602082850101111561052557600080fd5b9250929050565b6000806020838503121561053f57600080fd5b823567ffffffffffffffff81111561055657600080fd5b610562858286016104e3565b90969095509350505050565b600080600080600060a0868803121561058657600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000806000604084860312156105be57600080fd5b833567ffffffffffffffff8111156105d557600080fd5b6105e1868287016104e3565b909790965060209590950135949350505050565b60006020828403121561060757600080fd5b5035919050565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b60006020828403121561066d57600080fd5b8151801515811461067d57600080fd5b939250505056fea264697066735822122061d571866f956af81b53fe284bd88ef04430494019940f2886ea3d15a652f9ba64736f6c634300080a0033";
