/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { QuestExecution } from "../QuestExecution";

export class QuestExecution__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QuestExecution> {
    return super.deploy(overrides || {}) as Promise<QuestExecution>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): QuestExecution {
    return super.attach(address) as QuestExecution;
  }
  connect(signer: Signer): QuestExecution__factory {
    return super.connect(signer) as QuestExecution__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QuestExecution {
    return new Contract(address, _abi, signerOrProvider) as QuestExecution;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "BattleWinners",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "PseudoRandomNumbers",
    type: "event",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212200c6ac1c5f277d1ae129353d577793f17547ab337a827f1e6b46c1bb36b24ccbc64736f6c63430008070033";
